/*
 * InformaDatas.java
 *
 * Criado em 11 de Maio de 2005, 13:14
 */
package siscorpi.gui;
import  siscorpi.util.*;
import  javax.swing.*;
/**
 * A classe InformaDatas recebe duas supostas datas e as retorna formatadas
 * DD/MM/AAAA
 *
 * @author Sérgio Leite Bruno
 * @version 1.0
 */
public class InformaDatas extends java.awt.Dialog {
    boolean cancelado = true;
    ClasseValidaData   cValidaData   = new ClasseValidaData();    
    ClasseValida2Datas cValida2Datas = new ClasseValida2Datas();    
    /** Cria o form InformaDatas */
    public InformaDatas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        tfData1.setDocument(new JDateTextField());
        tfData2.setDocument(new JDateTextField());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfData1 = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        tfData2 = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btOk = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setModal(true);
        setResizable(false);
        setTitle("SisCorpI");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jLabel2.setText("Per\u00edodo de:");
        jPanel1.add(jLabel2);

        tfData1.setText("  /  /");
        tfData1.setPreferredSize(new java.awt.Dimension(100, 22));
        tfData1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfData1FocusLost(evt);
            }
        });

        jPanel1.add(tfData1);

        jLabel3.setText("a");
        jPanel1.add(jLabel3);

        tfData2.setText("  /  /");
        tfData2.setPreferredSize(new java.awt.Dimension(100, 22));
        tfData2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfData2FocusLost(evt);
            }
        });

        jPanel1.add(tfData2);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Sele\u00e7\u00e3o de Periodo");
        jPanel2.add(jLabel1);

        add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(new javax.swing.border.EtchedBorder());
        btOk.setMnemonic('O');
        btOk.setText("Ok");
        btOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOkActionPerformed(evt);
            }
        });

        jPanel3.add(btOk);

        btCancelar.setMnemonic('C');
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jPanel3.add(btCancelar);

        add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }//GEN-END:initComponents
    /** Verifica a consistência da 2ª data informada pelo usuário */
    private void tfData2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfData2FocusLost
        // TODO add your handling code here:
        cValidaData.ValidaData(tfData2.getText());
    }//GEN-LAST:event_tfData2FocusLost
    /** Verifica a consistência da 1ª data informada pelo usuário */
    private void tfData1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfData1FocusLost
        // TODO add your handling code here:
        cValidaData.ValidaData(tfData1.getText());
    }//GEN-LAST:event_tfData1FocusLost
    /**
     * Cancela o diálogo
     */
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        cancelado = true;
        closeDialog(null);
    }//GEN-LAST:event_btCancelarActionPerformed
    /**
     * Confirma o diálogo
     */
    private void btOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOkActionPerformed
        // TODO add your handling code here:
        if ( codigoNaoVazio(tfData1.getText(),"a data inicial") )
        {    
           if ( codigoNaoVazio(tfData2.getText(),"a data final") )
           {
                if ( cValidaData.ValidaData(tfData1.getText()) && cValidaData.ValidaData(tfData2.getText()) )     
                {    
                    if ( cValida2Datas.Valida2Datas( tfData1.getText(), tfData2.getText() ) )     
                    {
                        cancelado = false;
                        closeDialog(null);
                    }
                }
           } 
           else tfData2.requestFocus();
        }
        else tfData1.requestFocus();
    }//GEN-LAST:event_btOkActionPerformed
    /** Fecha o diálogo */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    /** Retorna a 1ª data informada pelo usuário */
    public String retornaData1()
    {
        return tfData1.getText();
    }
    /** Retorna a 2ª data informada pelo usuário */
    public String retornaData2()
    {
        return tfData2.getText();
    }
   /**
   * Verifica se um campo foi obrigatóriamente preenchido 
   * 
   * @param wpCampo do tipo String Campo a ser verificado o conteúdo,
   *        wpMsg do tipo String Mensagem a ser exibida caso não passe no teste
   * @return Verdadeiro se o campo foi preenchido ou falso se não preenchido
   */    
    private boolean codigoNaoVazio(String wpCampo, String wpMsg)
    {
        if (wpCampo.trim().equals("") || wpCampo.trim().equals("/  /")) 
        {
            JOptionPane.showMessageDialog(null,"É necessário informar "+wpMsg,"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        return false;
        }    
        else return true;  
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InformaDatas(new java.awt.Frame(), true).setVisible(true);
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btOk;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JFormattedTextField tfData1;
    private javax.swing.JFormattedTextField tfData2;
    // End of variables declaration//GEN-END:variables
    
}
