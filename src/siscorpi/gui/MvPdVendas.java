/*
 * MvPdVendas.java
 *
 * Criado em 9 de Abril de 2005, 23:12
 */
package siscorpi.gui;
import  java.sql.*;
import  java.util.*;
import  javax.swing.*;
import  java.text.DecimalFormat;
import  siscorpi.mvpedido.*;
import  siscorpi.mvitpedido.*;
import  siscorpi.pedido.*;
import  siscorpi.produto.*;
import  siscorpi.funcionario.*;
import  siscorpi.cliente_fornecedor.*;
import  siscorpi.util.*;

/**
 * A classe MvPdVendas é responsável pela manutenção de pedidos de vendas dos
 * clientes em um banco de dados SQL
 *
 * @author Sérgio Leite Bruno
 * @version 1.0
 */
public class MvPdVendas extends javax.swing.JFrame {
    private static MvPdVendas instancia;
    
    private Pedido              fachada;
    private MvPedido            mvpedidoSelecionado; 
    private Funcionario         funcionarioSelecionado; 
    private Cliente_fornecedor  clienteSelecionado;
    private MvItPedido          mvitpedidoSelecionado; 
    private Produto             produtoSelecionado; 
    
    private static final String mascaraI = "###,###,##0";
    private static final String mascaraD = "###,###,##0.00";

    String [] camposTabela = new String [] {"Código","Produto","Qtde.","V.Unit.","Frete","Sub-Total","Desconto","Total"};
    String [] linhasTabela = new String [] {" "};
    DecimalFormat doisDigitos = new DecimalFormat("0.00");
    ClasseTrocaCaracteres  cTrocaCaracteres  = new ClasseTrocaCaracteres();
    
    /** Cria o form MvPdVendas */
    private MvPdVendas() {
        try {
            this.fachada = new Pedido();
            initComponents(); 
        }
        catch(Exception e) {
            e.printStackTrace();
        }
        resetMvPedido();
    }
    public static MvPdVendas obterInstancia(){
        if ( instancia == null ) {
            instancia = new MvPdVendas();
        }    
        return instancia;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfData = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        tfHora = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jlSituacao = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tfCliente = new javax.swing.JTextField();
        btPesquisaCliente = new javax.swing.JButton();
        jlRazaoCliente = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfFuncionario = new javax.swing.JTextField();
        btPesquisaFuncionario = new javax.swing.JButton();
        jlNomeFuncionario = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tfPrazo_pagamento = new JFormattedTextField(new DecimalFormat(mascaraI));
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        tfProduto = new javax.swing.JTextField();
        btPesquisaProduto = new javax.swing.JButton();
        jlDescricao = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tfQtde = new JFormattedTextField(new DecimalFormat(mascaraD));
        jLabel15 = new javax.swing.JLabel();
        tfV_unitario = new JFormattedTextField(new DecimalFormat(mascaraD));
        jLabel16 = new javax.swing.JLabel();
        tfV_frete = new JFormattedTextField(new DecimalFormat(mascaraD));
        jLabel17 = new javax.swing.JLabel();
        tfS_total = new JFormattedTextField(new DecimalFormat(mascaraD));
        jLabel18 = new javax.swing.JLabel();
        tfTotali = new JFormattedTextField(new DecimalFormat(mascaraD));
        jLabel20 = new javax.swing.JLabel();
        tfDesconto = new JFormattedTextField(new DecimalFormat(mascaraD));
        jPanel5 = new javax.swing.JPanel();
        btGravar = new javax.swing.JButton();
        btImprimir = new javax.swing.JButton();
        btPesquisar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        btAbrir = new javax.swing.JButton();
        btSair = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        tfTotal = new JFormattedTextField(new DecimalFormat(mascaraD));

        getContentPane().setLayout(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SisCorpI");
        setResizable(false);
        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Pedido de Vendas");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 720, 25);

        jPanel2.setLayout(null);

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        jLabel2.setText("N\u00famero:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(10, 10, 50, 20);

        tfCodigo.setPreferredSize(new java.awt.Dimension(57, 22));
        tfCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCodigoFocusLost(evt);
            }
        });

        jPanel2.add(tfCodigo);
        tfCodigo.setBounds(60, 10, 57, 20);

        jLabel3.setText("Data:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(130, 10, 40, 20);

        tfData.setPreferredSize(new java.awt.Dimension(80, 22));
        jPanel2.add(tfData);
        tfData.setBounds(170, 10, 80, 20);

        jLabel4.setText("Hora:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(270, 10, 40, 20);

        tfHora.setPreferredSize(new java.awt.Dimension(60, 22));
        jPanel2.add(tfHora);
        tfHora.setBounds(310, 10, 60, 20);

        jLabel5.setText("Situa\u00e7\u00e3o:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(490, 10, 60, 20);

        jlSituacao.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12));
        jlSituacao.setForeground(new java.awt.Color(0, 51, 255));
        jlSituacao.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlSituacao.setText("ABERTO ");
        jlSituacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jlSituacao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jlSituacao.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jlSituacaoPropertyChange(evt);
            }
        });

        jPanel2.add(jlSituacao);
        jlSituacao.setBounds(550, 10, 160, 20);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 20, 720, 40);

        jPanel3.setLayout(null);

        jPanel3.setBorder(new javax.swing.border.EtchedBorder());
        jLabel7.setText("Cliente:");
        jPanel3.add(jLabel7);
        jLabel7.setBounds(10, 10, 60, 20);

        tfCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfClienteFocusLost(evt);
            }
        });

        jPanel3.add(tfCliente);
        tfCliente.setBounds(70, 10, 50, 19);

        btPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Pesquisar.GIF")));
        btPesquisaCliente.setFocusTraversalPolicyProvider(true);
        btPesquisaCliente.setPreferredSize(new java.awt.Dimension(73, 20));
        btPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaClienteActionPerformed(evt);
            }
        });

        jPanel3.add(btPesquisaCliente);
        btPesquisaCliente.setBounds(130, 10, 30, 20);

        jlRazaoCliente.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.add(jlRazaoCliente);
        jlRazaoCliente.setBounds(170, 10, 330, 20);

        jLabel9.setText("Vendedor:");
        jPanel3.add(jLabel9);
        jLabel9.setBounds(10, 30, 60, 20);

        tfFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfFuncionarioFocusLost(evt);
            }
        });

        jPanel3.add(tfFuncionario);
        tfFuncionario.setBounds(70, 30, 50, 19);

        btPesquisaFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Pesquisar.GIF")));
        btPesquisaFuncionario.setPreferredSize(new java.awt.Dimension(73, 20));
        btPesquisaFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaFuncionarioActionPerformed(evt);
            }
        });

        jPanel3.add(btPesquisaFuncionario);
        btPesquisaFuncionario.setBounds(130, 30, 30, 20);

        jlNomeFuncionario.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel3.add(jlNomeFuncionario);
        jlNomeFuncionario.setBounds(170, 30, 540, 20);

        jLabel11.setText("Prazo de pagamento:");
        jPanel3.add(jLabel11);
        jLabel11.setBounds(510, 10, 130, 20);

        tfPrazo_pagamento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfPrazo_pagamento.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfPrazo_pagamento.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 11));
        tfPrazo_pagamento.setValue(0);
        jPanel3.add(tfPrazo_pagamento);
        tfPrazo_pagamento.setBounds(640, 10, 70, 20);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 60, 720, 60);

        jPanel4.setLayout(null);

        jPanel4.setBorder(new javax.swing.border.EtchedBorder());
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jtTabela.setBackground(new java.awt.Color(204, 255, 255));
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtTabelaKeyPressed(evt);
            }
        });
        jtTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTabelaMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jtTabela);

        jPanel4.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 700, 170);

        jLabel12.setText("Produto");
        jPanel4.add(jLabel12);
        jLabel12.setBounds(10, 10, 60, 20);

        tfProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfProdutoFocusLost(evt);
            }
        });

        jPanel4.add(tfProduto);
        tfProduto.setBounds(10, 30, 50, 19);

        btPesquisaProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Pesquisar.GIF")));
        btPesquisaProduto.setPreferredSize(new java.awt.Dimension(73, 20));
        btPesquisaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaProdutoActionPerformed(evt);
            }
        });

        jPanel4.add(btPesquisaProduto);
        btPesquisaProduto.setBounds(70, 30, 30, 20);

        jlDescricao.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jlDescricao.setPreferredSize(new java.awt.Dimension(38, 20));
        jPanel4.add(jlDescricao);
        jlDescricao.setBounds(110, 30, 230, 20);

        jLabel14.setText("Qtde.");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(350, 10, 50, 20);

        tfQtde.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfQtde.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfQtde.setFont(new java.awt.Font("SansSerif", 0, 11));
        tfQtde.setMinimumSize(new java.awt.Dimension(6, 20));
        tfQtde.setPreferredSize(new java.awt.Dimension(30, 20));
        tfQtde.setValue(0);
        tfQtde.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfQtdeFocusLost(evt);
            }
        });

        jPanel4.add(tfQtde);
        tfQtde.setBounds(350, 30, 50, 20);

        jLabel15.setText("V.Unit.");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(400, 10, 50, 20);

        tfV_unitario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfV_unitario.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfV_unitario.setFont(new java.awt.Font("SansSerif", 0, 11));
        tfV_unitario.setMinimumSize(new java.awt.Dimension(6, 20));
        tfV_unitario.setValue(0);
        tfV_unitario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfV_unitarioFocusLost(evt);
            }
        });

        jPanel4.add(tfV_unitario);
        tfV_unitario.setBounds(400, 30, 50, 20);

        jLabel16.setText("Frete");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(450, 10, 40, 20);

        tfV_frete.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfV_frete.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfV_frete.setFont(new java.awt.Font("SansSerif", 0, 11));
        tfV_frete.setMinimumSize(new java.awt.Dimension(6, 20));
        tfV_frete.setValue(0);
        tfV_frete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfV_freteFocusLost(evt);
            }
        });

        jPanel4.add(tfV_frete);
        tfV_frete.setBounds(450, 30, 50, 20);

        jLabel17.setText("Sub-Total");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(500, 10, 70, 20);

        tfS_total.setEditable(false);
        tfS_total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfS_total.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfS_total.setFont(new java.awt.Font("SansSerif", 0, 11));
        tfS_total.setMinimumSize(new java.awt.Dimension(6, 20));
        tfS_total.setValue(0);
        jPanel4.add(tfS_total);
        tfS_total.setBounds(500, 30, 70, 20);

        jLabel18.setText("Total");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(640, 10, 60, 20);

        tfTotali.setEditable(false);
        tfTotali.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfTotali.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfTotali.setFont(new java.awt.Font("SansSerif", 0, 11));
        tfTotali.setMinimumSize(new java.awt.Dimension(6, 20));
        tfTotali.setValue(0);
        jPanel4.add(tfTotali);
        tfTotali.setBounds(640, 30, 70, 20);

        jLabel20.setText("Desconto");
        jPanel4.add(jLabel20);
        jLabel20.setBounds(570, 10, 70, 20);

        tfDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfDesconto.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfDesconto.setFont(new java.awt.Font("SansSerif", 0, 11));
        tfDesconto.setMinimumSize(new java.awt.Dimension(6, 20));
        tfDesconto.setValue(0);
        tfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfDescontoFocusLost(evt);
            }
        });

        jPanel4.add(tfDesconto);
        tfDesconto.setBounds(570, 30, 70, 20);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 160, 720, 240);

        jPanel5.setBorder(new javax.swing.border.EtchedBorder());
        btGravar.setMnemonic('G');
        btGravar.setText("Gravar");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        jPanel5.add(btGravar);

        btImprimir.setMnemonic('I');
        btImprimir.setText("Imprimir");
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });

        jPanel5.add(btImprimir);

        btPesquisar.setMnemonic('P');
        btPesquisar.setText("Pesquisar");
        btPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisarActionPerformed(evt);
            }
        });

        jPanel5.add(btPesquisar);

        btExcluir.setMnemonic('x');
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        jPanel5.add(btExcluir);

        btCancelar.setMnemonic('C');
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jPanel5.add(btCancelar);

        btFechar.setMnemonic('F');
        btFechar.setText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        jPanel5.add(btFechar);

        btAbrir.setMnemonic('A');
        btAbrir.setText("Abrir");
        btAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirActionPerformed(evt);
            }
        });

        jPanel5.add(btAbrir);

        btSair.setMnemonic('r');
        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        jPanel5.add(btSair);

        getContentPane().add(jPanel5);
        jPanel5.setBounds(0, 120, 720, 40);

        jPanel6.setLayout(null);

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));
        jLabel21.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12));
        jLabel21.setText("T O T A L ->");
        jPanel6.add(jLabel21);
        jLabel21.setBounds(500, 10, 100, 20);

        tfTotal.setEditable(false);
        tfTotal.setForeground(new java.awt.Color(51, 51, 51));
        tfTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfTotal.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        tfTotal.setFont(new java.awt.Font("SansSerif", 1, 12));
        tfTotal.setValue(0);
        jPanel6.add(tfTotal);
        tfTotal.setBounds(610, 10, 100, 20);

        getContentPane().add(jPanel6);
        jPanel6.setBounds(0, 400, 720, 40);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void tfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfDescontoFocusLost
        // TODO add your handling code here:
        if ( jlSituacao.getText().equals("ABERTO") && calculaTotal() ) {
            double wttAnterior = 0;
            if ( JOptionPane.showConfirmDialog(null,"Confirma a gravação deste produto",
            "SisCorpI - Confirmação",JOptionPane.YES_NO_OPTION)  ==JOptionPane.YES_OPTION)
            {
                // verificar se existe este item no pedido
                try {
                    this.mvitpedidoSelecionado = fachada.procurarMvItPedido(
                                         tfCodigo.getText(), tfProduto.getText());
                    wttAnterior = mvitpedidoSelecionado.getTotal();
                } catch(MvItPedidoNaoEncontradoException ex){
                } catch(RepositorioException ex){}
                mvitpedidoSelecionado = null;
        
                try {
                    if (criaMvItPedido()) {
                    if ( registraTotGer(wttAnterior, Double.parseDouble(tfTotali.getValue().toString()) ) )
                    {    
                        fachada.cadastrarMvItPedido(mvitpedidoSelecionado);
                        FiltraTabela(tfCodigo.getText());
                        resetMvItPedido();
                        tfProduto.requestFocus();
                        JOptionPane.showMessageDialog(null,"Gravação realizada com êxito...",
                        "SisCorpI - Atenção",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                } catch(MvItPedidoNaoEncontradoException ex){
                    JOptionPane.showMessageDialog(null,ex.getMessage(),
                    "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                } catch(RepositorioException ex){ 
                    JOptionPane.showMessageDialog(null,ex.getMessage(),
                    "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tfDescontoFocusLost
        
    private boolean criaMvItPedido() {
        boolean resposta    = false;
        String pedido       = tfCodigo.getText();
        String produto      = tfProduto.getText();
        double qtde         = Double.parseDouble(""+tfQtde.getValue());  
        double v_unitario   = Double.parseDouble(""+tfV_unitario.getValue());  
        double v_frete      = Double.parseDouble(""+tfV_frete.getValue());  
        double s_total      = Double.parseDouble(""+tfS_total.getValue());  
        double desconto     = Double.parseDouble(""+tfDesconto.getValue());  
        double total        = Double.parseDouble(""+tfTotali.getValue());  
        if (pedido.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite o código do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (tfData.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite a data do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (tfHora.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite a hora do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (tfCliente.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite o cliente","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (produto.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite o produto","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (mvitpedidoSelecionado == null) {
            mvitpedidoSelecionado = new MvItPedido(pedido,produto,qtde,v_unitario,
            v_frete,s_total,desconto,total);
            resposta = true;
        } else {
            mvitpedidoSelecionado.setQtde(qtde);
            mvitpedidoSelecionado.setV_unitario(v_unitario);
            mvitpedidoSelecionado.setV_frete(v_frete);
            mvitpedidoSelecionado.setS_total(s_total);
            mvitpedidoSelecionado.setDesconto(desconto);
            mvitpedidoSelecionado.setTotal(total);
            resposta = true;
        }
        return resposta;
    }
    
    private void tfV_freteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfV_freteFocusLost
        // TODO add your handling code here:
        calculaSubTotal();
        calculaTotal();
    }//GEN-LAST:event_tfV_freteFocusLost

    private void tfV_unitarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfV_unitarioFocusLost
        // TODO add your handling code here:
        calculaSubTotal();
        calculaTotal();
    }//GEN-LAST:event_tfV_unitarioFocusLost

    private void tfQtdeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfQtdeFocusLost
        // TODO add your handling code here:
        calculaSubTotal();
        calculaTotal();
    }//GEN-LAST:event_tfQtdeFocusLost
    /** Caso mude a situação do Pedido de vendas: se aberto torna-se editável se 
     *  não só leitura
     */
    private void jlSituacaoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jlSituacaoPropertyChange
        // TODO add your handling code here:
        if ( jlSituacao.getText().equals("ABERTO"))
             editaCampos(true);
        else editaCampos(false);
    }//GEN-LAST:event_jlSituacaoPropertyChange
    /** Caso mude a situação do Pedido de vendas: se aberto torna-se editável se 
     *  não só leitura
     *
     * @param wEdita do tipo boolean serve para indicar se o pedido está aberto 
     *        ou não
     */
    private void editaCampos(boolean wEdita) {
        tfData.setEditable(wEdita);
        tfHora.setEditable(wEdita);
        tfCliente.setEditable(wEdita);
        tfPrazo_pagamento.setEditable(wEdita);
        tfFuncionario.setEditable(wEdita);
        tfProduto.setEditable(wEdita);
        tfQtde.setEditable(wEdita);
        tfV_unitario.setEditable(wEdita);
        tfV_frete.setEditable(wEdita);
        tfDesconto.setEditable(wEdita);
        btPesquisaCliente.setEnabled(wEdita);
        btPesquisaProduto.setEnabled(wEdita);
        btPesquisaFuncionario.setEnabled(wEdita);
    }                                      
    /** Caso seja dado um duplo click no JTable, esta rotina atualiza os dados 
     *  nos jTextField correspondente a linha 
     */
    private void jtTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTabelaMouseClicked
        // TODO add your handling code here:
        if ( evt.getClickCount() >= 2 )
        {
            atualizaCamposProdutojtTabela();
            tfQtde.requestFocus();
        } 
    }//GEN-LAST:event_jtTabelaMouseClicked
    /** Realiza consulta em um banco de dados SQL - tabela de funcionário */    
    private void btPesquisaFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaFuncionarioActionPerformed
        // TODO add your handling code here:
        tfFuncionario.requestFocus();
        PesqQuery pesq_cli = new PesqQuery(3,"SELECT codigo,nome FROM funcionario where ",
        new String [] {"Código","Nome"},new String [] {"Codigo","Nome"},1,
        new java.awt.Frame(), true);
	pesq_cli.setVisible(true);
        if ( pesq_cli.getReturnStatus() == 1 )
        {
            tfFuncionario.setText(pesq_cli.toString());
            btGravar.requestFocus();
        }    
        pesq_cli = null;
    }//GEN-LAST:event_btPesquisaFuncionarioActionPerformed
    /** Realiza consulta em um banco de dados SQL - tabela de clientes */    
    private void btPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaClienteActionPerformed
        // TODO add your handling code here:
        tfCliente.requestFocus();
        PesqQuery pesq_cli = new PesqQuery(2,"SELECT codigo,razao_social,fantasia FROM clientes where ",
        new String [] {"Código","Razão Social","Fantasia"},new String [] {"Codigo","Razao_social","Fantasia"},1,
        new java.awt.Frame(), true);
	pesq_cli.setVisible(true);
        if ( pesq_cli.getReturnStatus() == 1 )
        {
            tfCliente.setText(pesq_cli.toString());
            tfPrazo_pagamento.requestFocus();
        }    
        pesq_cli = null;
    }//GEN-LAST:event_btPesquisaClienteActionPerformed
    /** Realiza consulta em um banco de dados SQL - tabela de produto */    
    private void btPesquisaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaProdutoActionPerformed
        // TODO add your handling code here:
        tfProduto.requestFocus();
        PesqQuery pesq_cli = new PesqQuery(4,"SELECT codigo,descricao,cod_barras FROM produto where ",
        new String [] {"Código","Produto","Cód. Barras"},new String [] {"Codigo","Descricao","Cod_barras"},1,
        new java.awt.Frame(), true);
	pesq_cli.setVisible(true);
        if ( pesq_cli.getReturnStatus() == 1 )
        {
            tfProduto.setText(pesq_cli.toString());
            tfQtde.requestFocus();
        }    
        pesq_cli = null;
    }//GEN-LAST:event_btPesquisaProdutoActionPerformed
    /** Ao perder o foco o sistema verifica se o funcionário é válido */    
    private void tfFuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfFuncionarioFocusLost
        // TODO add your handling code here:
        String codigo = tfFuncionario.getText();
        if (codigo.equals("")) {
            jlNomeFuncionario.setText("");
        } else {
            try {
                this.funcionarioSelecionado = fachada.procurarFuncionario(codigo);
                jlNomeFuncionario.setText(funcionarioSelecionado.getNome());
            } catch(FuncionarioNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Vendedor não encontrado",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                jlNomeFuncionario.setText("");
                tfFuncionario.setText("");
            } catch(RepositorioException ex){ 
                JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
                JOptionPane.WARNING_MESSAGE);
            }
        }
        funcionarioSelecionado = null;
    }//GEN-LAST:event_tfFuncionarioFocusLost
    /** Ao perder o foco o sistema verifica se o cliente é válido */    
    private void tfClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfClienteFocusLost
        // TODO add your handling code here:

        /*
        String codigo = tfCliente.getText();
        if (codigo.equals("")) {
            jlRazaoCliente.setText("");
        } else {
            try {
                this.clienteSelecionado = fachada.procurarCliente(codigo);
                jlRazaoCliente.setText(clienteSelecionado.getRazao_social());
            } catch(Cliente_fornecedorNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Cliente não encontrado",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                jlRazaoCliente.setText("");
                tfCliente.setText("");
            } catch(RepositorioException ex){
                JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
                JOptionPane.WARNING_MESSAGE);
            }
        }
        clienteSelecionado = null;
         */
    }//GEN-LAST:event_tfClienteFocusLost
    /** Caso seja presionado no JTable:
     *  Space -> atualiza os dados nos jTextField correspondente a linha 
     *  selecionada do JTable
     *  Delete -> exclui os dados no banco SQL correspondente a linha 
     *  selecionada do JTable
     */
    private void jtTabelaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTabelaKeyPressed
        // TODO add your handling code here:
        String wxPrd, wxTot;
        wxPrd = String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),0) );
        wxTot = String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),7) );
        wxPrd = wxPrd.trim();
        wxTot = wxTot.trim();
        if ( wxPrd.equals("") )
            JOptionPane.showMessageDialog(null,"É preciso selecionar um produto válido...",
            "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
        else if ( evt.getKeyText(evt.getKeyCode()).equals("Delete") ) 
        {
            int n = JOptionPane.showConfirmDialog(null,"Confirma a exclusão deste produto:\n"+
            wxPrd + " - " + String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),1) ),
            "SisCorpI - Confirmação",JOptionPane.YES_NO_OPTION);
            if (n==JOptionPane.YES_OPTION)
            {
                try {
                    wxTot = cTrocaCaracteres.TrocaCaracteres( ".", "", wxTot );
                    wxTot = cTrocaCaracteres.TrocaCaracteres( ",", ".", wxTot );
                    fachada.removerMvItPedido(tfCodigo.getText(), wxPrd);
                    registraTotGer( Double.parseDouble(wxTot) , 0 );
                    FiltraTabela(tfCodigo.getText());
                    resetMvItPedido();
                    JOptionPane.showMessageDialog(null,"Produto excluído com êxito...",
                    "SisCorpI - Atenção",JOptionPane.INFORMATION_MESSAGE);
                } catch(MvItPedidoNaoEncontradoException ex){
                    JOptionPane.showMessageDialog(null,"produto não encontrado !",
                    "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                } catch(RepositorioException ex){
                    JOptionPane.showMessageDialog(null,ex.getMessage(),
                    "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                }
            }
        } 
        else if ( evt.getKeyText(evt.getKeyCode()).equals("Space") )
        {    
            atualizaCamposProdutojtTabela();
            tfQtde.requestFocus();
        }    
    }//GEN-LAST:event_jtTabelaKeyPressed
    
    private void calculaSubTotal() 
    {
        try
        {        
        String cQtde = cTrocaCaracteres.TrocaCaracteres( ",", ".", tfQtde.getText() );
        String cVunt = cTrocaCaracteres.TrocaCaracteres( ",", ".", tfV_unitario.getText() );
        String cFret = cTrocaCaracteres.TrocaCaracteres( ",", ".", tfV_frete.getText() );
        double Qtde = Double.parseDouble(cQtde);
        double Vunt = Double.parseDouble(cVunt);
        double Fret = Double.parseDouble(cFret);
        double STot = (Qtde * Vunt) + Fret;
        tfS_total.setValue(STot);
        }
        catch (Exception ex)
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Algum valor não corresponde a um número !\n"+
            ex.toString(),"SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            limpaCamposValoresProduto(0);
        }
    }
    /**
    * Atualiza os dados na tela do registro via campos JTable
    * 
    */    
    private void atualizaCamposProdutojtTabela()
    {
        tfProduto.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),0) ));
        tfQtde.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),2) ));
        tfV_unitario.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),3) ));
        tfV_frete.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),4) ));
        tfDesconto.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),6) ));
        tfS_total.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),5) ));
        tfTotali.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),7) ));
        jlDescricao.setText(String.valueOf( jtTabela.getValueAt(jtTabela.getSelectedRow(),1) ));
    } 
    /** Calcula o valor total do item */    
    private boolean calculaTotal() 
    {
        try {        
            double Stot = Double.parseDouble( tfS_total.getValue().toString() );
            double Desc = Double.parseDouble( tfDesconto.getValue().toString() );
            double Tota = Stot - Desc;
            tfTotali.setValue(Tota);
            return true;
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Algum valor não corresponde a um número !\n"+
            ex.toString(),"SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            limpaCamposValoresProduto(0);
            return false;
        }
    }
    /** Realiza o somatório do total com o item adicionado ou removido do Pedido 
     *  de Vendas para depois gravá-lo
     */    
    private boolean registraTotGer(double wTta, double wTtx)
    {
        try
        {
            // Calcular o novo total
            double cTg = Double.parseDouble(tfTotal.getValue().toString());
            double Totg = cTg - wTta + wTtx;
            // Registrar o novo total
            RegistraTotal(Totg); 
            return true;
        }        
        catch (Exception ex) { 
            JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
            return false; 
        }
    }
    /** Realiza a gravação do total do Pedido de Vendas */    
    private void RegistraTotal(double wxTg)
    {
        String codigo = tfCodigo.getText();
        try {
            fachada.atualizarMvPedidoTotal(codigo, wxTg);
            tfTotal.setValue(wxTg);    
        } catch(MvPedidoNaoEncontradoException ex){
            JOptionPane.showMessageDialog(null,"Pedido não encontrado",
            "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
        } catch(RepositorioException ex){
            JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        }
    }
    /** Ao perder o foco o sistema verifica se o produto é válida */    
    private void tfProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfProdutoFocusLost
        // TODO add your handling code here:
        boolean temRegistro = false;
        String pedido  = tfCodigo.getText();
        String produto = tfProduto.getText();
        if ( produto.equals(""))
             resetMvItPedido();
        else
        {
            // verificar se o produto é válido
            try {
                this.produtoSelecionado = fachada.procurarProduto(tfProduto.getText());
                jlDescricao.setText(produtoSelecionado.getDescricao());
                tfV_unitario.setValue(produtoSelecionado.getPreco_venda());
                temRegistro = true;
            } catch(ProdutoNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Produto não encontrado !",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            } catch(RepositorioException ex){
                JOptionPane.showMessageDialog(null,ex.getMessage(),
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            }
            produtoSelecionado = null;
            if (temRegistro) {
                try {
                    this.mvitpedidoSelecionado = fachada.procurarMvItPedido(
                                                 pedido, produto);
                    atualizaCamposProduto();
                } catch(MvItPedidoNaoEncontradoException ex){
                    limpaCamposValoresProduto( Double.parseDouble( ""+tfV_unitario.getValue() ));
                } catch(RepositorioException ex){
                    JOptionPane.showMessageDialog(null,ex.getMessage(),
                    "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tfProdutoFocusLost
    /** Alterar a situação do Pedido de Vendas para aberto */    
    private void btAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirActionPerformed
        // TODO add your handling code here:
        alteraSituacao("A","a abertura");
    }//GEN-LAST:event_btAbrirActionPerformed
    
    /** Alterar a situação do Pedido de Vendas para fechado */        
    void alteraSituacao(String wsituacao, String wtexto) {                                         
        String codigo   = tfCodigo.getText();
        if ( JOptionPane.showConfirmDialog(null,"Confirma "+wtexto+" deste pedido",
        "SisCorpI - Confirmação",JOptionPane.YES_NO_OPTION)  ==JOptionPane.YES_OPTION)
        {
            try {
                fachada.atualizarMvPedidoSituacao(codigo, wsituacao);
                jlSituacao.setText( retornaDescricaoSituacao( wsituacao ) );
            } catch(MvPedidoNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Pedido não encontrado",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            } catch(RepositorioException ex){
                JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
                JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    /** Alterar a situação do Pedido de Vendas para fechado */    
    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here: 
        alteraSituacao("F","o fechamento");
    }//GEN-LAST:event_btFecharActionPerformed
    /**
    * Realiza alteração ou inclusão do registro em um banco de dados SQL
    * 
    */    
    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        // TODO add your handling code here:
        if ( JOptionPane.showConfirmDialog(null,"Confirma a gravação deste pedido",
        "SisCorpI - Confirmação",JOptionPane.YES_NO_OPTION)  ==JOptionPane.YES_OPTION)
        {
        try {
            if (criaMvPedido()) {
                fachada.cadastrarMvPedido(mvpedidoSelecionado);
                JOptionPane.showMessageDialog(null,"Gravação realizada com êxito...",
                "SisCorpI - Atenção",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch(MvPedidoNaoEncontradoException ex){
            JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } catch(RepositorioException ex){ 
            JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        }
        }
    }//GEN-LAST:event_btGravarActionPerformed
    private boolean criaMvPedido() {
        boolean resposta        = false;
        String codigo           = tfCodigo.getText();
        String data             = tfData.getText();
        String hora             = tfHora.getText();
        String cliente          = tfCliente.getText();
        String funcionario      = tfFuncionario.getText();
        int    prazo_pagamento  = Integer.parseInt(""+tfPrazo_pagamento.getValue());  
        String situacao         = retornaCodigoSituacao(jlSituacao.getText());
        double total            = Double.parseDouble(""+tfTotal.getValue());  
        
        if (codigo.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite o código do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (data.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite a data do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (hora.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite a hora do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (cliente.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite o cliente","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        } else if (mvpedidoSelecionado == null) {
            mvpedidoSelecionado = new MvPedido(codigo,data,hora,cliente,
            funcionario,prazo_pagamento,situacao,total);
            resposta = true;
        } else {
            mvpedidoSelecionado.setData(data);
            mvpedidoSelecionado.setHora(hora);
            mvpedidoSelecionado.setCliente(cliente);
            mvpedidoSelecionado.setFuncionario(funcionario);
            mvpedidoSelecionado.setPrazo_pagamento(prazo_pagamento);
            mvpedidoSelecionado.setSituacao(situacao);
            mvpedidoSelecionado.setTotal(total);
            resposta = true;
        }
        return resposta;
    }
    /**
    * Realizar exclusão em um banco de dados SQL
    * 
    */    
    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        String codigo = tfCodigo.getText();
        try {
            fachada.removerMvPedido(codigo);
            resetMvPedido();
            JOptionPane.showMessageDialog(null,"Pedido excluído com êxito...",
            "SisCorpI - Atenção",JOptionPane.INFORMATION_MESSAGE);
        } catch(MvPedidoNaoEncontradoException ex){
            resetMvPedido();
            tfCodigo.setText(codigo);
        } catch(RepositorioException ex){
            JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btExcluirActionPerformed
    /**
    * Inicia os componentes sem conteúdo na tela de cadastro
    * 
    */    
    void resetMvPedido() {
        mvpedidoSelecionado = null;
        tfCodigo.setText("");
        tfData.setText("");
        tfHora.setText("");
        jlSituacao.setText("ABERTO");
        tfCliente.setText("");
        jlRazaoCliente.setText("");
        tfFuncionario.setText("");
        jlNomeFuncionario.setText("");
        tfPrazo_pagamento.setValue(0);
        tfTotal.setValue(0);
        FiltraTabela("");
        resetMvItPedido();
    }
    /** Realiza consulta em um banco de dados SQL - tabela de pedido */    
    private void btPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisarActionPerformed
        // TODO add your handling code here:
        tfCodigo.requestFocus();
        PesqQuery pesq_cli = new PesqQuery(1,    
        "SELECT pdvendas.Codigo,pdvendas.Cliente,clientes.Razao_social FROM pdvendas, clientes where pdvendas.cliente=clientes.codigo and ",
        new String [] {"Número","Código","Cliente"},
        new String [] {"pdvendas.Codigo","pdvendas.Cliente","clientes.Razao_social"},0,
        new java.awt.Frame(), true);
	pesq_cli.setVisible(true);
        if ( pesq_cli.getReturnStatus() == 1 )
        {
            tfCodigo.setText(pesq_cli.toString());
            tfData.requestFocus();
        }    
        pesq_cli = null;
    }//GEN-LAST:event_btPesquisarActionPerformed
    /** Alterar a situação do Pedido de Vendas para cancelado */    
    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // TODO add your handling code here:
        alteraSituacao("C","o cancelamento");
    }//GEN-LAST:event_btCancelarActionPerformed
    /**
    * Ao perder o foco o sistema verifica se existe um cadastro com este código 
    * caso exista mostra os dados caso não inicia o cadastro
    */    
    private void tfCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCodigoFocusLost
        // TODO add your handling code here:
        if ( tfCodigo.getText().equals("") ) 
            resetMvPedido();
        else
        {    
        ClasseStrZero cStrZero = new ClasseStrZero();
        String codigo = cStrZero.strzero( tfCodigo.getText(), 7 );
        if (codigo.equals("")) {
            resetMvPedido();
        } else {
            try {
                this.mvpedidoSelecionado = fachada.procurarMvPedido(codigo);
                atualizaCampos();
            } catch(MvPedidoNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Pedido não encontrado",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
                resetMvPedido();
                tfCodigo.setText(codigo);
            } catch(RepositorioException ex){
                JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
                JOptionPane.WARNING_MESSAGE);
            }
        }
        cStrZero = null;
        }
    }//GEN-LAST:event_tfCodigoFocusLost
    /**
    * Atualiza os dados na tela do registro em um banco de dados SQL
    * 
    */    
    private void atualizaCampos()
    {
        if (mvpedidoSelecionado != null) {
            tfCodigo.setText(mvpedidoSelecionado.getCodigo());
            tfData.setText(mvpedidoSelecionado.getData());
            tfHora.setText(mvpedidoSelecionado.getHora());
            tfCliente.setText( mvpedidoSelecionado.getCliente() );
            try {
                this.clienteSelecionado = fachada.procurarCliente(tfCliente.getText());
                jlRazaoCliente.setText(clienteSelecionado.getRazao_social());
            } catch(Cliente_fornecedorNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Cliente não encontrado",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            } catch(RepositorioException ex){
                JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
                JOptionPane.WARNING_MESSAGE);
            }
            tfFuncionario.setText( mvpedidoSelecionado.getFuncionario() );
            try {
                this.funcionarioSelecionado = fachada.procurarFuncionario(tfFuncionario.getText());
                jlNomeFuncionario.setText(funcionarioSelecionado.getNome());
            } catch(FuncionarioNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Vendedor não encontrado",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            } catch(RepositorioException ex){ 
                JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
                JOptionPane.WARNING_MESSAGE);
            }
            tfPrazo_pagamento.setValue( mvpedidoSelecionado.getPrazo_pagamento() );
            jlSituacao.setText( retornaDescricaoSituacao(mvpedidoSelecionado.getSituacao()) );
            tfTotal.setValue( mvpedidoSelecionado.getTotal() );
            
            FiltraTabela(tfCodigo.getText());
            resetMvItPedido();
            clienteSelecionado = null;
            funcionarioSelecionado = null;
        }
    } 
    /** Fecha a tela de pedidos */    
    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btSairActionPerformed
    /** Imprime o pedido de vendas selecionado na tela */    
    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed
        // TODO add your handling code here:
        if (tfCodigo.equals("")) {
            JOptionPane.showMessageDialog(null,"Digite o código do pedido","SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        }    
        else {
            if ( ! jlSituacao.getText().trim().equals("FECHADO") )
            {
                JOptionPane.showMessageDialog(null,"É necesário fechar este Pedido de Vendas !",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            }   
            else
            {    
                Map parameters = new HashMap();
                parameters.put("idCliente",tfCodigo.getText());
                ClasseRelatorio cRelatorio = new ClasseRelatorio();
                cRelatorio.Relatorio(new String("relpedcliente.jasper"), parameters);
                cRelatorio = null;
            }
        }    
    }//GEN-LAST:event_btImprimirActionPerformed
    /** Inicia os componentes sem conteúdo na tela de Pedido de Vendas */    
    
    void resetMvItPedido() {
        mvitpedidoSelecionado = null;
        tfProduto.setText("");
        jlDescricao.setText("");
        limpaCamposValoresProduto(0);
    }
    
    /** Inicia os componentes sem conteúdo na tela de Pedido de Vendas */    
    private void limpaCamposValoresProduto(double wpreco)
    {
        tfQtde.setValue(0);
        tfV_unitario.setValue(wpreco);
        tfV_frete.setValue(0);
        tfDesconto.setValue(0);
        tfS_total.setValue(0);
        tfTotali.setValue(0);
    }
  /**
  * Atualiza os dados na tela do registro em um banco de dados SQL
  * 
  * @param rs do tipo ResultSet que aponta para a posição atual do registro na 
  * tabela
  */    
    private void atualizaCamposProduto()
    {
        if (mvitpedidoSelecionado != null) {
            tfProduto.setText(mvitpedidoSelecionado.getProduto());
            tfQtde.setValue(mvitpedidoSelecionado.getQtde());
            tfV_unitario.setValue(mvitpedidoSelecionado.getQtde());
            tfV_frete.setValue(mvitpedidoSelecionado.getQtde());
            tfDesconto.setValue(mvitpedidoSelecionado.getQtde());
            tfS_total.setValue(mvitpedidoSelecionado.getQtde());
            tfTotali.setValue(mvitpedidoSelecionado.getQtde());
            try {
                this.produtoSelecionado = fachada.procurarProduto(tfProduto.getText());
                jlDescricao.setText(produtoSelecionado.getDescricao());
            } catch(ProdutoNaoEncontradoException ex){
                JOptionPane.showMessageDialog(null,"Produto não encontrado !",
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            } catch(RepositorioException ex){
                JOptionPane.showMessageDialog(null,ex.getMessage(),
                "SisCorpI - Atenção",JOptionPane.WARNING_MESSAGE);
            }
            produtoSelecionado = null;
        }
    } 
    /** Retorna o código da situação do Pedido de Vendas
    *
    *  @params wST contendo a palavra que indica a situação
    *  @return retorna uma String contendo a Letra da situação
    */
    private String retornaCodigoSituacao(String wST)
    {
        if ( wST.equals("FECHADO") )
            return  "F";
        else if ( wST.equals("CANCELADO") )
            return  "C";
        else return  "A";
    }
    /** Retorna a descrição da situação do Pedido de Vendas
    *
    *  @params wST contendo oa letra que indica a situação
    *  @return retorna uma String contendo a descrição da situação
    */
    private String retornaDescricaoSituacao(String wST)
    {
        if ( wST.equals("F") )
            return  "FECHADO";
        else if ( wST.equals("C") )
            return  "CANCELADO";
        else return  "ABERTO";
    }
    /** Filtra a tabela com o pedido selecionado trazendo seus itens */
    private void FiltraTabela(String wPed)
    {
        displayResultSet(wPed);  
    }
    /*
    * Vai preenchendo o JTable com os itens de um banco de dados SQL
    * 
    * @param rs do tipo ResultSet que aponta para a posição do registro na 
    * tabela
    */    
    private void displayResultSet( String codigo )
    {
        try {
            Vector columnHeads = new Vector();
            Vector rows        = new Vector();
            if ( ! codigo.equals("")) { rows = fachada.listarMvItPedido(codigo); }
            boolean[] editavel = new boolean[camposTabela.length];
            for ( int i = 0; i < camposTabela.length; ++i ) 
            {    
                columnHeads.addElement(camposTabela[i]);
                editavel[i] = false;
            }    
            final boolean[] EDIT_COL = editavel;
            jtTabela.setModel(new javax.swing.table.DefaultTableModel( rows, columnHeads ) 
            { boolean[] canEdit = EDIT_COL ;             
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return canEdit [columnIndex]; }
            }
            );
            validate();
        } catch(RepositorioException ex){ 
            JOptionPane.showMessageDialog(null,ex.getMessage(),"SisCorpI - Atenção",
            JOptionPane.WARNING_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MvPdVendas().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAbrir;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btImprimir;
    private javax.swing.JButton btPesquisaCliente;
    private javax.swing.JButton btPesquisaFuncionario;
    private javax.swing.JButton btPesquisaProduto;
    private javax.swing.JButton btPesquisar;
    private javax.swing.JButton btSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlNomeFuncionario;
    private javax.swing.JLabel jlRazaoCliente;
    private javax.swing.JLabel jlSituacao;
    private javax.swing.JTable jtTabela;
    private javax.swing.JTextField tfCliente;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JFormattedTextField tfData;
    private javax.swing.JFormattedTextField tfDesconto;
    private javax.swing.JTextField tfFuncionario;
    private javax.swing.JFormattedTextField tfHora;
    private javax.swing.JFormattedTextField tfPrazo_pagamento;
    private javax.swing.JTextField tfProduto;
    private javax.swing.JFormattedTextField tfQtde;
    private javax.swing.JFormattedTextField tfS_total;
    private javax.swing.JFormattedTextField tfTotal;
    private javax.swing.JFormattedTextField tfTotali;
    private javax.swing.JFormattedTextField tfV_frete;
    private javax.swing.JFormattedTextField tfV_unitario;
    // End of variables declaration//GEN-END:variables
}
